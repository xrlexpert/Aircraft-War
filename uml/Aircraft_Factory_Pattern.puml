@startuml
abstract class AbstractAircraft{
    # maxHp:int
    # hp:int
    + AbstractAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
    + decreaseHp(int decrease):void
    + getHp():int
    + {abstract} shoot():List<BaseBullet>
}
class MobEnemy{
    + MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
}
class EliteEnemy{
    + EliteEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
}
interface AircraftFactory{
    +{abstract} createAircraft(): AbstractAircraft
}
class EliteEnemyFactory{
    + createAircraft():AbstractAircraft
}
class MobEnemyFactory{
    + createAircraft():AbstractAircraft
}
AbstractAircraft <|-- MobEnemy
AbstractAircraft <|-- EliteEnemy
AircraftFactory <|.. EliteEnemyFactory
AircraftFactory <|.. MobEnemyFactory
AbstractAircraft <.. AircraftFactory

@enduml
