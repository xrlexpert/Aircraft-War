@startuml
abstract class AbstractAircraft{
    # maxHp:int
    # hp:int
    + AbstractAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
    + decreaseHp(int decrease):void
    + getHp():int
    + {abstract} shoot():List<BaseBullet>
}
class MobEnemy{
    + MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
}
class EliteEnemy{
    + EliteEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
}
class ElitePlusEnemy{
    + ElitePlusEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
}
class BossEnemy{
    + BossEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
}
interface AircraftFactory{
    +{abstract} createAircraft(): AbstractAircraft
}
class EliteEnemyFactory{
    + createAircraft():AbstractAircraft
}
class MobEnemyFactory{
    + createAircraft():AbstractAircraft
}
class ElitePlusEnemyFactory{
    + createAircraft():AbstractAircraft
}
class BossEnemyFactory{
    + createAircraft():AbstractAircraft
}
AbstractAircraft <-- AircraftFactory
AbstractAircraft <|-- MobEnemy
AbstractAircraft <|-- EliteEnemy
AbstractAircraft <|-- ElitePlusEnemy
AbstractAircraft <|-- BossEnemy

AircraftFactory <|.. MobEnemyFactory
AircraftFactory <|.. EliteEnemyFactory
AircraftFactory <|.. ElitePlusEnemyFactory
AircraftFactory <|.. BossEnemyFactory
@enduml
